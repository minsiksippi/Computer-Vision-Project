Among the eight functions that exist in the compoundKeypointsAndDescriptors() function, the function that takes the longest execution time is the generateDescriptors() function. In this function, I think it takes a long time because there are many loops and function calls.
The first method to speed up this function is to change the parameter value of the function. An example is 'width_window'. This parameter means calculating the gradient size and direction of pixels belonging to a small window (width_window * width_window). The part implemented as a code is a nested loop in the generateDescriptors function. And in the range (-half_width, half_width) of the nested loop, ‘half_width’ is calculated by the size of the width_window. Therefore, I think that reducing the number of ‘width_window’ will reduce the speed because the number of operations decreases a lot. However, as the execution time decreases, the accuracy of the algorithm also decreases.
The second method is to optimize the code through loop unrolling. There are several loops and nested loop in the function of generateDescriptors(). Therefore, if the number of loops is reduced through loop unrolling, the execution speed is reduced because the overhead of loop condition checking and jump is also reduced. However, it has the disadvantage of increasing code size and register usage.
I modified the code through the above-mentioned method to derive the following results.
